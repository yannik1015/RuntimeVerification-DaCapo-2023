// Copyright (c) 2002-now JavaMOP Team. All Rights Reserved. Modified by Yannik Zeier.
package mop;

import java.io.*;
import java.util.*;

// This property specifies that a program does
// not call the hasnext method before the next
// method of an iterator, or that the hasnext
// method does not return true.
// This property is borrowed from tracematches
// (see ECOOP'07 http://abc.comlab.ox.ac.uk/papers)

full-binding HasNext(Iterator i) {
   event hasnexttrue after(Iterator i) returning(boolean ret):
      call(boolean Iterator.hasNext()) && target(i) && condition(ret) { }
   event next before(Iterator i) :
      call(* Iterator.next()) && target(i) {}

   fsm :
     start [
        next -> unsafe
        hasnexttrue -> safe
     ]
     safe [
        next -> start
        hasnexttrue -> safe
     ]
     unsafe [
        next -> unsafe
        hasnexttrue -> safe
     ]

     alias match = unsafe

   @match {
      System.err.println("next called without hasNext returning true before!");
   }
}
