benchmark graphchi
  class org.dacapo.harness.GraphChi
  thread-model per_cpu;

size small args "ALSMatrixFactorization", "${DATA}/graphchi/netflix_mm_10K", "2"
  output stdout digest 0xce90a8af938806c984cdafa69732ecd6045aa4d3,
         stderr digest 0xda39a3ee5e6b4b0d3255bfef95601890afd80709;

size default args "ALSMatrixFactorization", "${DATA}/graphchi/netflix_mm_1M", "2"
  output stdout digest 0x48680a70e04a8fb5629bf016aa88a30442bf665a,
         stderr digest 0xda39a3ee5e6b4b0d3255bfef95601890afd80709;

size large args "ALSMatrixFactorization", "${DATA}/graphchi/netflix_mm", "4"
  output stdout digest 0x1557d3e587cf7a157c4b3ea731a0ba55e26f6432,
         stderr digest 0xda39a3ee5e6b4b0d3255bfef95601890afd80709;

description
  short	     "ALS matrix factorization with GraphChi.",
  long       "The Netflix Challenge dataset is used to drive the GraphChi engine in its ALS matrix factorization mode.  The input data is pre-sharding (sharding is IO intensive, so is excluded from this workload).",
  copyright  "Copyright 2012 Aapo Kyrola, Guy Blelloch, Carlos Guestrin / Carnegie Mellon University",
  license    "Apache License, Version 2.0",
  url        "https://github.com/GraphChi/graphchi-java",
  threads    "Explicitly multi-threaded, scaled to available processors.",

